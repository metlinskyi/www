version: "2"
networks:
    default:
        driver: bridge
        ipam:
            config:
                - subnet: "192.168.7.0/28"
services:
    fpm:
        container_name: fpm
        image: magento:fpm
        build:
            context: ./docker/fpm
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./src:/var/www/html:rw
        networks:
            default:
                aliases:
                    - php-fpm.docker.internal
        environment:
            - VERBOSE=true
        links:
            - mysql
            - redis
    cron:
        container_name: cron
        image: magento:cron
        build:
            context: ./docker/cron
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./src:/var/www/html:rw
        networks:
            default:
                aliases:
                    - php-cron.docker.internal
        environment:
            - VERBOSE=false
        links:
            - mysql
            - redis
    nginx:
        container_name: nginx
        image: magento:nginx
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./src:/var/www/html:rw
        networks:
            default:
                aliases:
                    - nginx.docker.internal
        environment:
            - VERBOSE=true
        links:
            - fpm
        ports:
            - "443:443"
    mysql:
        container_name: mysql
        image: magento:mysql
        build:
            context: ./docker/mysql
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./db:/var/lib/mysql
        networks:
            default:
                aliases:
                    - localhost
                    - mysql.docker.internal
        environment:
            - VERBOSE=false
            - MYSQL_ROOT_PASSWORD=magento
            - MYSQL_USER_NAME=magento
            - MYSQL_USER_PASSWORD=magento
            - MYSQL_DATABASE=magento
    varnish:
        container_name: varnish
        image: magento:varnish
        build:
            context: ./docker/varnish
            dockerfile: Dockerfile
        restart: unless-stopped
        environment:
            - VERBOSE=false
        networks:
            default:
                aliases:
                    - varnish.docker.internal
        links:
            - nginx
        ports:
            - "80:80"   
    redis:
        container_name: redis
        image: magento:redis
        build:
            context: ./docker/redis
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            default:
                aliases:
                    - redis.docker.internal
        environment:
            - VERBOSE=false