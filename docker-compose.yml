version: "2"

networks:

    magento2:
        driver: bridge
        ipam:
            config:
                - subnet: "192.168.7.0/28"

services:

    fpm:
        container_name: magento2.fpm
        image: www/magento2:fpm
        build:
            context: ./docker/fpm
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./src:/var/www/html:rw
        networks:
            magento2:
                aliases:
                    - php-fpm.magento2.local
        environment:
            - VERBOSE=true
        links:
            - mysql
            - redis

    cron:
        container_name: magento2.cron
        image: www/magento2:cron
        build:
            context: ./docker/cron
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./src:/var/www/html:rw
        networks:
            magento2:
                aliases:
                    - php-cron.magento2.local
        environment:
            - VERBOSE=false
        links:
            - mysql
            - redis

    nginx:
        container_name: magento2.nginx
        image: www/magento2:nginx
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./src:/var/www/html:rw
        networks:
            magento2:
                aliases:
                    - nginx.magento2.local
        environment:
            - VERBOSE=true
        links:
            - fpm
        ports:
            - "443:443"

    varnish:
        container_name: magento2.varnish
        image: www/magento2:varnish
        build:
            context: ./docker/varnish
            dockerfile: Dockerfile
        restart: unless-stopped
        environment:
            - VERBOSE=false
        networks:
            magento2:
                aliases:
                    - varnish.magento2.local
        links:
            - nginx
        ports:
            - "80:80"   
            
    redis:
        container_name: magento2.redis
        image: www/magento2:redis
        build:
            context: ./docker/redis
            dockerfile: Dockerfile
        restart: unless-stopped
        networks:
            magento2:
                aliases:
                    - redis.magento2.local
        environment:
            - VERBOSE=false

    mysql:
        container_name: magento2.mysql
        image: www/magento2:mysql
        build:
            context: ./docker/mysql
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            - ./db:/var/lib/mysql
        networks:
            magento2:
                aliases:
                    - localhost
                    - mysql.magento2.local
        env_file:
            - variables.env

    cli:
        container_name: magento2.cli
        image: www/magento2:cli
        build:
            context: ./docker/cli
            dockerfile: Dockerfile
        volumes:
            - ./src:/var/www/html:rw
            - ./dist:/dist:rw
        networks:
            magento2:
                aliases:
                    - php-cli.magento2.local  
        depends_on:
            - mysql
        links:
            - mysql
        env_file:
            - variables.env